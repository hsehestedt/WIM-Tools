**********************************
* Changes in the Current Release *
**********************************

v18.2.0.168 - Made some significant changes specifically to better accomodate scripting. If the number of files in a source folder changed, this would break scripting because it changes your responses when the program asks if you want to update each individual file. To eliminate this problem, the program will now allow you to specify a full path including a file name. This way the program does not need to inquire about each file because you are specifying each file unambiguously.

In addition, the script files are now a little easier to read and manually modify.

Files affected:

WIM_Tools.bas - QB64 Source Code
WIM_Tools.exe - Compiled Executable
WIM Tools User Guide.pdf

The following files are unchanged:

ISO.ico


**********************
* Previous Releases: *
**********************


v18.1.8.167 - Fixed a bug that only happens when program goes back to start and reinitializes. For example, after a routine is run to completion and we return to the main menu. Right near the start of the program we stored the current working directory in a variable so that we knew the location from where the program was started. However, we then change the working directory to a temporary location where we can create temporary files. When jumping back to the start, we clear all variables and loose track of the original working directory. As a result, it is essential that we change the current working directory back to the original location before we jump back to the beginning of the program.

Also added a note in the help for scripting to make users aware that changing contents of directories can cause script failures.

Finally, the shutdown option was not working when the system was locked. The program was missing a "/f" option to force the shutdown. Without this, a shutdown cannot be performaed when the system is locked. We also provide a chance to abort shutdown.

v18.1.7.166 - In the newly rewritten "PAUSE" routine, we have 2 loops that wait for a key press and a key release. These loops were running at an unlimited speed which could cause high CPU utilization. Revised the code so that these loops run only 50 times per second.

v18.1.6.165 - Rewrote the "pause" routine. This was a very simple routine that simply printed a blank line and then paused execution of the program until the user hit a key. The pause was accomplished by running the command line utility "pause" from a QB64 "shell" statement. For most purposes this is fine, except that it would not take input from the QB64 keyboard buffer. As a result, taking a series of commands and pasting them into the program would not work when a pause is encountered. This also has the potential to cause problems if we want to expand scripting capabilities in the future. The rewrite of this routine solves this.